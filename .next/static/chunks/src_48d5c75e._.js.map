{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,6LAAC,oKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 188, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Textarea({ className, ...props }: React.ComponentProps<\"textarea\">) {\n  return (\n    <textarea\n      data-slot=\"textarea\"\n      className={cn(\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAyC;IACzE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,ucACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS","debugId":null}},
    {"offset": {"line": 219, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAhBS","debugId":null}},
    {"offset": {"line": 271, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uGACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mqBACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 347, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Select({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />\n}\n\nfunction SelectGroup({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />\n}\n\nfunction SelectValue({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />\n}\n\nfunction SelectTrigger({\n  className,\n  size = \"default\",\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n  size?: \"sm\" | \"default\"\n}) {\n  return (\n    <SelectPrimitive.Trigger\n      data-slot=\"select-trigger\"\n      data-size={size}\n      className={cn(\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  )\n}\n\nfunction SelectContent({\n  className,\n  children,\n  position = \"popper\",\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        data-slot=\"select-content\"\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md\",\n          position === \"popper\" &&\n            \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n          className\n        )}\n        position={position}\n        {...props}\n      >\n        <SelectScrollUpButton />\n        <SelectPrimitive.Viewport\n          className={cn(\n            \"p-1\",\n            position === \"popper\" &&\n              \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1\"\n          )}\n        >\n          {children}\n        </SelectPrimitive.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  )\n}\n\nfunction SelectLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\n  return (\n    <SelectPrimitive.Label\n      data-slot=\"select-label\"\n      className={cn(\"text-muted-foreground px-2 py-1.5 text-xs\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\n  return (\n    <SelectPrimitive.Item\n      data-slot=\"select-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  )\n}\n\nfunction SelectSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\n  return (\n    <SelectPrimitive.Separator\n      data-slot=\"select-separator\"\n      className={cn(\"bg-border pointer-events-none -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectScrollUpButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n  return (\n    <SelectPrimitive.ScrollUpButton\n      data-slot=\"select-scroll-up-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronUpIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollUpButton>\n  )\n}\n\nfunction SelectScrollDownButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n  return (\n    <SelectPrimitive.ScrollDownButton\n      data-slot=\"select-scroll-down-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronDownIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollDownButton>\n  )\n}\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 596, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/messaging/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { Textarea } from '@/components/ui/textarea'\nimport { Badge } from '@/components/ui/badge'\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'\n\ninterface Message {\n  id: number\n  subject: string\n  content: string\n  senderName: string\n  receiverName: string\n  sentAt: string\n  isRead: boolean\n  type: 'sent' | 'received'\n}\n\ninterface Contact {\n  id: number\n  name: string\n  role: string\n  email: string\n}\n\nexport default function MessagingPage() {\n  const [currentLang, setCurrentLang] = useState('fr')\n  const [messages, setMessages] = useState<Message[]>([])\n  const [contacts, setContacts] = useState<Contact[]>([])\n  const [selectedContact, setSelectedContact] = useState('')\n  const [loading, setLoading] = useState(true)\n\n  // New message form state\n  const [newMessage, setNewMessage] = useState({\n    receiverId: '',\n    subject: '',\n    content: ''\n  })\n\n  useEffect(() => {\n    fetchMessagingData()\n  }, [])\n\n  const fetchMessagingData = async () => {\n    try {\n      // Mock data for demonstration\n      const mockMessages: Message[] = [\n        {\n          id: 1,\n          subject: 'Réunion parents-professeurs',\n          content: 'Bonjour, nous organisons une réunion parents-professeurs le 15 novembre à 16h00. Votre présence est souhaitée pour discuter des progrès de votre enfant.',\n          senderName: 'Direction',\n          receiverName: 'Parent Benali',\n          sentAt: '2024-01-20T10:00:00Z',\n          isRead: false,\n          type: 'received'\n        },\n        {\n          id: 2,\n          subject: 'Demande de rendez-vous',\n          content: 'Bonjour Madame Alami, je souhaiterais prendre rendez-vous avec vous pour discuter des difficultés de mon enfant en mathématiques.',\n          senderName: 'Parent Benali',\n          receiverName: 'Mme. Alami',\n          sentAt: '2024-01-18T14:30:00Z',\n          isRead: true,\n          type: 'sent'\n        },\n        {\n          id: 3,\n          subject: 'Résultats du trimestre',\n          content: 'Les bulletins du premier trimestre sont maintenant disponibles. Vous pouvez les consulter dans le portail parents.',\n          senderName: 'Mme. Alami',\n          receiverName: 'Parent Benali',\n          sentAt: '2024-01-15T09:15:00Z',\n          isRead: true,\n          type: 'received'\n        },\n        {\n          id: 4,\n          subject: 'Absence justifiée',\n          content: 'Mon enfant sera absent demain en raison d\\'un rendez-vous médical. Veuillez trouver le certificat médical en pièce jointe.',\n          senderName: 'Parent Benali',\n          receiverName: 'Direction',\n          sentAt: '2024-01-12T16:45:00Z',\n          isRead: true,\n          type: 'sent'\n        }\n      ]\n\n      const mockContacts: Contact[] = [\n        { id: 1, name: 'Direction', role: 'Administration', email: 'direction@ecole.ma' },\n        { id: 2, name: 'Mme. Alami', role: 'Professeur CE1', email: 'alami@ecole.ma' },\n        { id: 3, name: 'M. Bennani', role: 'Professeur CM2', email: 'bennani@ecole.ma' },\n        { id: 4, name: 'Mme. Tazi', role: 'Professeur 6ème', email: 'tazi@ecole.ma' },\n        { id: 5, name: 'Service Comptabilité', role: 'Administration', email: 'comptabilite@ecole.ma' }\n      ]\n\n      setMessages(mockMessages)\n      setContacts(mockContacts)\n    } catch (error) {\n      console.error('Error fetching messaging data:', error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleSendMessage = async (e: React.FormEvent) => {\n    e.preventDefault()\n    \n    if (!newMessage.receiverId || !newMessage.subject || !newMessage.content) {\n      alert(currentLang === 'fr' ? 'Veuillez remplir tous les champs' : 'يرجى ملء جميع الحقول')\n      return\n    }\n\n    try {\n      // In real app, send to API\n      const selectedContactData = contacts.find(c => c.id.toString() === newMessage.receiverId)\n      \n      const messageToAdd: Message = {\n        id: messages.length + 1,\n        subject: newMessage.subject,\n        content: newMessage.content,\n        senderName: 'Vous',\n        receiverName: selectedContactData?.name || 'Destinataire',\n        sentAt: new Date().toISOString(),\n        isRead: true,\n        type: 'sent'\n      }\n\n      setMessages([messageToAdd, ...messages])\n      setNewMessage({ receiverId: '', subject: '', content: '' })\n      \n      alert(currentLang === 'fr' ? 'Message envoyé avec succès!' : 'تم إرسال الرسالة بنجاح!')\n    } catch (error) {\n      console.error('Error sending message:', error)\n      alert(currentLang === 'fr' ? 'Erreur lors de l\\'envoi du message' : 'خطأ في إرسال الرسالة')\n    }\n  }\n\n  const markAsRead = (messageId: number) => {\n    setMessages(messages.map(msg => \n      msg.id === messageId ? { ...msg, isRead: true } : msg\n    ))\n  }\n\n  const sentMessages = messages.filter(msg => msg.type === 'sent')\n  const receivedMessages = messages.filter(msg => msg.type === 'received')\n  const unreadCount = receivedMessages.filter(msg => !msg.isRead).length\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-green-600 mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">\n            {currentLang === 'fr' ? 'Chargement...' : 'جاري التحميل...'}\n          </p>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"min-h-screen py-8\">\n      <div className=\"max-w-7xl mx-auto\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold text-gray-800 mb-2\">\n            {currentLang === 'fr' ? 'Système de Messages' : 'نظام الرسائل'}\n          </h1>\n          <p className=\"text-gray-600\">\n            {currentLang === 'fr' \n              ? 'Communication entre le personnel, les parents et l\\'administration'\n              : 'التواصل بين الموظفين والآباء والإدارة'\n            }\n          </p>\n        </div>\n\n        {/* Quick Stats */}\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\n          <Card className=\"border-0 shadow-lg\">\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm font-medium text-gray-600\">\n                    {currentLang === 'fr' ? 'Messages Reçus' : 'الرسائل المستلمة'}\n                  </p>\n                  <p className=\"text-2xl font-bold text-blue-600\">{receivedMessages.length}</p>\n                </div>\n                <div className=\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center\">\n                  <span className=\"text-blue-600 font-bold\">📥</span>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card className=\"border-0 shadow-lg\">\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm font-medium text-gray-600\">\n                    {currentLang === 'fr' ? 'Messages Envoyés' : 'الرسائل المرسلة'}\n                  </p>\n                  <p className=\"text-2xl font-bold text-green-600\">{sentMessages.length}</p>\n                </div>\n                <div className=\"w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center\">\n                  <span className=\"text-green-600 font-bold\">📤</span>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card className=\"border-0 shadow-lg\">\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm font-medium text-gray-600\">\n                    {currentLang === 'fr' ? 'Non Lus' : 'غير مقروءة'}\n                  </p>\n                  <p className=\"text-2xl font-bold text-red-600\">{unreadCount}</p>\n                </div>\n                <div className=\"w-12 h-12 bg-red-100 rounded-lg flex items-center justify-center\">\n                  <span className=\"text-red-600 font-bold\">🔴</span>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card className=\"border-0 shadow-lg\">\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm font-medium text-gray-600\">\n                    {currentLang === 'fr' ? 'Contacts' : 'جهات الاتصال'}\n                  </p>\n                  <p className=\"text-2xl font-bold text-purple-600\">{contacts.length}</p>\n                </div>\n                <div className=\"w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center\">\n                  <span className=\"text-purple-600 font-bold\">👥</span>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Main Content */}\n        <Tabs defaultValue=\"inbox\" className=\"space-y-6\">\n          <TabsList className=\"grid w-full grid-cols-4\">\n            <TabsTrigger value=\"inbox\">\n              {currentLang === 'fr' ? 'Boîte de Réception' : 'صندوق الوارد'}\n              {unreadCount > 0 && (\n                <Badge className=\"ml-2 bg-red-600 text-white\">{unreadCount}</Badge>\n              )}\n            </TabsTrigger>\n            <TabsTrigger value=\"sent\">\n              {currentLang === 'fr' ? 'Messages Envoyés' : 'الرسائل المرسلة'}\n            </TabsTrigger>\n            <TabsTrigger value=\"compose\">\n              {currentLang === 'fr' ? 'Nouveau Message' : 'رسالة جديدة'}\n            </TabsTrigger>\n            <TabsTrigger value=\"contacts\">\n              {currentLang === 'fr' ? 'Contacts' : 'جهات الاتصال'}\n            </TabsTrigger>\n          </TabsList>\n\n          {/* Inbox Tab */}\n          <TabsContent value=\"inbox\" className=\"space-y-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle>\n                  {currentLang === 'fr' ? 'Messages Reçus' : 'الرسائل المستلمة'}\n                </CardTitle>\n                <CardDescription>\n                  {currentLang === 'fr' ? 'Vos messages reçus' : 'رسائلك المستلمة'}\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  {receivedMessages.length === 0 ? (\n                    <div className=\"text-center py-12\">\n                      <div className=\"w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                        <span className=\"text-2xl\">📭</span>\n                      </div>\n                      <h3 className=\"text-lg font-semibold text-gray-800 mb-2\">\n                        {currentLang === 'fr' ? 'Aucun message' : 'لا توجد رسائل'}\n                      </h3>\n                      <p className=\"text-gray-600\">\n                        {currentLang === 'fr' \n                          ? 'Vous n\\'avez aucun message reçu.'\n                          : 'ليس لديك أي رسائل مستلمة.'\n                        }\n                      </p>\n                    </div>\n                  ) : (\n                    receivedMessages.map((message) => (\n                      <div \n                        key={message.id} \n                        className={`p-4 rounded-lg border cursor-pointer transition-colors ${\n                          message.isRead \n                            ? 'bg-gray-50 border-gray-200 hover:bg-gray-100' \n                            : 'bg-blue-50 border-blue-200 hover:bg-blue-100'\n                        }`}\n                        onClick={() => markAsRead(message.id)}\n                      >\n                        <div className=\"flex items-start justify-between mb-2\">\n                          <div className=\"flex items-center space-x-3\">\n                            <h4 className=\"font-semibold text-gray-800\">{message.subject}</h4>\n                            {!message.isRead && (\n                              <Badge className=\"bg-blue-600\">\n                                {currentLang === 'fr' ? 'Nouveau' : 'جديد'}\n                              </Badge>\n                            )}\n                          </div>\n                          <span className=\"text-sm text-gray-500\">\n                            {new Date(message.sentAt).toLocaleDateString('fr-FR')}\n                          </span>\n                        </div>\n                        <p className=\"text-gray-700 mb-2 line-clamp-2\">{message.content}</p>\n                        <p className=\"text-sm text-gray-500\">\n                          {currentLang === 'fr' ? 'De:' : 'من:'} {message.senderName}\n                        </p>\n                      </div>\n                    ))\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* Sent Tab */}\n          <TabsContent value=\"sent\" className=\"space-y-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle>\n                  {currentLang === 'fr' ? 'Messages Envoyés' : 'الرسائل المرسلة'}\n                </CardTitle>\n                <CardDescription>\n                  {currentLang === 'fr' ? 'Vos messages envoyés' : 'رسائلك المرسلة'}\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  {sentMessages.length === 0 ? (\n                    <div className=\"text-center py-12\">\n                      <div className=\"w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                        <span className=\"text-2xl\">📤</span>\n                      </div>\n                      <h3 className=\"text-lg font-semibold text-gray-800 mb-2\">\n                        {currentLang === 'fr' ? 'Aucun message envoyé' : 'لا توجد رسائل مرسلة'}\n                      </h3>\n                      <p className=\"text-gray-600\">\n                        {currentLang === 'fr' \n                          ? 'Vous n\\'avez envoyé aucun message.'\n                          : 'لم ترسل أي رسائل.'\n                        }\n                      </p>\n                    </div>\n                  ) : (\n                    sentMessages.map((message) => (\n                      <div \n                        key={message.id} \n                        className=\"p-4 rounded-lg border bg-green-50 border-green-200 hover:bg-green-100 transition-colors\"\n                      >\n                        <div className=\"flex items-start justify-between mb-2\">\n                          <h4 className=\"font-semibold text-gray-800\">{message.subject}</h4>\n                          <span className=\"text-sm text-gray-500\">\n                            {new Date(message.sentAt).toLocaleDateString('fr-FR')}\n                          </span>\n                        </div>\n                        <p className=\"text-gray-700 mb-2 line-clamp-2\">{message.content}</p>\n                        <p className=\"text-sm text-gray-500\">\n                          {currentLang === 'fr' ? 'À:' : 'إلى:'} {message.receiverName}\n                        </p>\n                      </div>\n                    ))\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* Compose Tab */}\n          <TabsContent value=\"compose\" className=\"space-y-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle>\n                  {currentLang === 'fr' ? 'Nouveau Message' : 'رسالة جديدة'}\n                </CardTitle>\n                <CardDescription>\n                  {currentLang === 'fr' ? 'Envoyer un message à un membre du personnel' : 'إرسال رسالة إلى عضو في الطاقم'}\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <form onSubmit={handleSendMessage} className=\"space-y-4\">\n                  <div>\n                    <Label htmlFor=\"receiver\">\n                      {currentLang === 'fr' ? 'Destinataire *' : 'المستلم *'}\n                    </Label>\n                    <Select \n                      value={newMessage.receiverId} \n                      onValueChange={(value) => setNewMessage({...newMessage, receiverId: value})}\n                    >\n                      <SelectTrigger>\n                        <SelectValue placeholder={\n                          currentLang === 'fr' ? 'Sélectionner un destinataire' : 'اختر مستلم'\n                        } />\n                      </SelectTrigger>\n                      <SelectContent>\n                        {contacts.map((contact) => (\n                          <SelectItem key={contact.id} value={contact.id.toString()}>\n                            {contact.name} - {contact.role}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"subject\">\n                      {currentLang === 'fr' ? 'Sujet *' : 'الموضوع *'}\n                    </Label>\n                    <Input\n                      id=\"subject\"\n                      value={newMessage.subject}\n                      onChange={(e) => setNewMessage({...newMessage, subject: e.target.value})}\n                      placeholder={currentLang === 'fr' ? 'Sujet du message' : 'موضوع الرسالة'}\n                      className=\"mt-1\"\n                    />\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"content\">\n                      {currentLang === 'fr' ? 'Message *' : 'الرسالة *'}\n                    </Label>\n                    <Textarea\n                      id=\"content\"\n                      value={newMessage.content}\n                      onChange={(e) => setNewMessage({...newMessage, content: e.target.value})}\n                      placeholder={currentLang === 'fr' ? 'Tapez votre message ici...' : 'اكتب رسالتك هنا...'}\n                      className=\"mt-1\"\n                      rows={6}\n                    />\n                  </div>\n\n                  <Button \n                    type=\"submit\" \n                    className=\"w-full bg-gradient-to-r from-green-600 to-blue-600 hover:from-green-700 hover:to-blue-700\"\n                  >\n                    {currentLang === 'fr' ? 'Envoyer le Message' : 'إرسال الرسالة'}\n                  </Button>\n                </form>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* Contacts Tab */}\n          <TabsContent value=\"contacts\" className=\"space-y-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle>\n                  {currentLang === 'fr' ? 'Carnet d\\'Adresses' : 'دفتر العناوين'}\n                </CardTitle>\n                <CardDescription>\n                  {currentLang === 'fr' ? 'Liste des contacts disponibles' : 'قائمة جهات الاتصال المتاحة'}\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                  {contacts.map((contact) => (\n                    <div key={contact.id} className=\"p-4 border rounded-lg hover:shadow-md transition-shadow\">\n                      <h4 className=\"font-semibold text-gray-800 mb-1\">{contact.name}</h4>\n                      <p className=\"text-sm text-gray-600 mb-2\">{contact.role}</p>\n                      <p className=\"text-sm text-blue-600\">{contact.email}</p>\n                      <Button \n                        size=\"sm\" \n                        variant=\"outline\" \n                        className=\"mt-3 w-full\"\n                        onClick={() => {\n                          setNewMessage({...newMessage, receiverId: contact.id.toString()})\n                          // Switch to compose tab (you'd need to implement tab switching)\n                        }}\n                      >\n                        {currentLang === 'fr' ? 'Envoyer un message' : 'إرسال رسالة'}\n                      </Button>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n        </Tabs>\n\n        {/* Language Toggle */}\n        <div className=\"fixed bottom-6 right-6\">\n          <Button\n            onClick={() => setCurrentLang(currentLang === 'fr' ? 'ar' : 'fr')}\n            className=\"bg-gradient-to-r from-green-600 to-red-600 hover:from-green-700 hover:to-red-700 text-white shadow-lg\"\n          >\n            {currentLang === 'fr' ? 'العربية' : 'Français'}\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}